name: publish
on:
  push:
    branches: ["main"]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write       # required for GitHub Packages publish with GITHUB_TOKEN

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # Derive version from the tag (e.g., v0.1.0 -> 0.1.0)
      - name: Compute version from tag
        id: ver
        shell: bash
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      # Add GitHub Packages source using GITHUB_TOKEN (no PAT needed)
      - name: Add GitHub Packages source
        run: |
          dotnet nuget add source \
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --name github \
            --username "${{ github.repository_owner }}" \
            --password "${{ secrets.GITHUB_TOKEN }}" \
            --store-password-in-clear-text

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build SpotiNet.Client/SpotiNet.Client.csproj -c Release --no-restore

      # (Optional) If you have tests, uncomment and adjust the path
      # - name: Test
      #   run: dotnet test SpotiNet.Client.Tests/SpotiNet.Client.Tests.csproj -c Release --no-build

      - name: Pack
        run: |
          dotnet pack SpotiNet.Client/SpotiNet.Client.csproj \
            -c Release \
            -o ./nupkgs \
            -p:Version=${{ steps.ver.outputs.VERSION }} \
            -p:ContinuousIntegrationBuild=true

      # Publish to GitHub Packages
      - name: Push to GitHub Packages
        run: dotnet nuget push "./nupkgs/*.nupkg" --source github --skip-duplicate

      # Publish to nuget.org
      - name: Push to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        shell: bash
        run: |
          dotnet nuget push "./nupkgs/*.nupkg" \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate

          # Push symbols if present (SourceLink is recommended regardless)
          if ls ./nupkgs/*.snupkg 1> /dev/null 2>&1; then
            dotnet nuget push "./nupkgs/*.snupkg" \
              --api-key "$NUGET_API_KEY" \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          fi
